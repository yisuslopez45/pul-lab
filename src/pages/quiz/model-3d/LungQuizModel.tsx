/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models-3d/Lung.glb --types --transform 
Files: public/models-3d/Lung.glb [12.89MB] >  \pul-lab\Lung-transformed.glb [4.98MB] (61%)
*/

import { JSX, useCallback, useMemo, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { Group, MeshStandardMaterial } from "three";
import { GLTFResult } from '../../disease-pneumonia/interfaces/Lung';

export default function LungQuizModel(props: JSX.IntrinsicElements['group']) {
  const group = useRef<Group>(null)
  const { nodes, materials } = useGLTF("/models-3d/pneumonia/Lung-transformed.glb") as unknown as GLTFResult

  const [selectedPart, setSelectedPart] = useState<string | null>(null)

  const highlightMaterial = useMemo(() => new MeshStandardMaterial({ color: 'orange' }), [])

    const handleClick = useCallback((e: React.MouseEvent<HTMLButtonElement>, selected : string) => {
      e.stopPropagation()
      setSelectedPart(selected)
     }, [setSelectedPart]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Trachea"
          onClick={(e : React.MouseEvent<HTMLButtonElement> )=>handleClick( e  , 'Trachea')}
        >
          <mesh  castShadow name="Trachea_1"  geometry={nodes.Trachea_1.geometry}  material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaArytenoidMaterial}  />
          <mesh castShadow name="Trachea_2" geometry={nodes.Trachea_2.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaMaterial} />
          <mesh castShadow name="Trachea_3" geometry={nodes.Trachea_3.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaCricoidMaterial} />
          <mesh castShadow name="Trachea_4" geometry={nodes.Trachea_4.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaEpiglosttisMaterial} />
          <mesh castShadow name="Trachea_5" geometry={nodes.Trachea_5.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaHyoidMaterial} />
          <mesh castShadow name="Trachea_6" geometry={nodes.Trachea_6.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaLarynxMaterial} />
          <mesh castShadow name="Trachea_7" geometry={nodes.Trachea_7.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaMedianMaterial} />
          <mesh castShadow name="Trachea_8" geometry={nodes.Trachea_8.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaThyrocricoidMaterial} />
          <mesh castShadow name="Trachea_9" geometry={nodes.Trachea_9.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaThyrohyoidMaterial} />
          <mesh castShadow name="Trachea_10" geometry={nodes.Trachea_10.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaThyroidMaterial} />
          <mesh castShadow name="Trachea_11" geometry={nodes.Trachea_11.geometry} material={selectedPart == "Trachea" ? highlightMaterial : materials.TracheaVocalMaterial} />
        </group>
        <group name="Lung"   onClick={(e : React.MouseEvent<HTMLButtonElement> )=>handleClick( e  , 'Lung')} >
          <mesh castShadow name="Lung_1" geometry={nodes.Lung_1.geometry} material={ selectedPart == "Lung" ? highlightMaterial : materials.LungRightMaterial} morphTargetDictionary={nodes.Lung_1.morphTargetDictionary} morphTargetInfluences={nodes.Lung_1.morphTargetInfluences} />
          <mesh castShadow name="Lung_2" geometry={nodes.Lung_2.geometry} material={ selectedPart == "Lung" ? highlightMaterial : materials.LungPulmonaryVeinsMaterial} morphTargetDictionary={nodes.Lung_2.morphTargetDictionary} morphTargetInfluences={nodes.Lung_2.morphTargetInfluences} />
          <mesh castShadow name="Lung_3" geometry={nodes.Lung_3.geometry} material={ selectedPart == "Lung" ? highlightMaterial : materials.LungPulmonaryArteriesMaterial} morphTargetDictionary={nodes.Lung_3.morphTargetDictionary} morphTargetInfluences={nodes.Lung_3.morphTargetInfluences} />
          <mesh castShadow name="Lung_4" geometry={nodes.Lung_4.geometry} material={ selectedPart == "Lung" ? highlightMaterial : materials.LungLeftMaterial} morphTargetDictionary={nodes.Lung_4.morphTargetDictionary} morphTargetInfluences={nodes.Lung_4.morphTargetInfluences} />
        </group>
        <mesh  onClick={(e : React.MouseEvent<HTMLButtonElement> )=>handleClick( e  , 'Diaphragm')} castShadow name="Diaphragm" geometry={nodes.Diaphragm.geometry} material={ selectedPart == "Diaphragm" ? highlightMaterial : materials.DiaphragmMaterial} morphTargetDictionary={nodes.Diaphragm.morphTargetDictionary} morphTargetInfluences={nodes.Diaphragm.morphTargetInfluences} />
      </group>
    </group>
  )
}

useGLTF.preload("/models-3d/pneumonia/Lung-transformed.glb")
